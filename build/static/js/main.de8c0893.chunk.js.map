{"version":3,"sources":["components/common/Nav.js","components/common/Home.js","lib/api.js","components/fscharacters/CharacterCard.js","components/common/Error.js","components/common/Loading.js","components/fscharacters/CharacterIndex.js","components/fscharacters/CharacterShow.js","lib/notification.js","lib/episodes.js","components/fsepisodes/EpisodeCard.js","components/fsepisodes/EpisodeIndex.js","App.js","index.js"],"names":["Nav","className","to","Home","baseUrl","getSingleCharacter","characterId","Axios","get","CharacterCard","name","image","origin","src","alt","Error","Loading","CharacterIndex","React","useState","characters","setCharacters","searchValue","setSearchValue","isError","setIsError","isLoading","useEffect","getData","a","response","data","placeholder","onChange","e","target","value","filter","character","toLowerCase","includes","filteredCharacters","map","gender","img_url","id","alias","abilities","status","CharacterShow","useParams","setCharacter","characterResponse","quoteResponse","quotesArray","quote","by","message","Math","floor","random","length","notify","show","background","color","role","species","episodes","EpisodeCard","episodeId","director","writer","href","rel","EpisodeIndex","setEpisodes","selectedSeason","setSelectedSeason","episode","air_date","filteredEpisodes","date","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de8c0893.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Nav () {\n  return (\n    <nav className=\"home-navbar\">\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link to =\"/\" className=\"navbar-item\">\n            Home\n          </Link>      \n          <Link to =\"/character\" className=\"navbar-item\">\n            Characters\n          </Link>        \n          <Link to =\"/episode\" className=\"navbar-item\">\n            Episodes\n          </Link>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\n\nexport default Nav\n","import React from 'react'\n\nfunction Home () {\n  return (\n    <section className=\"hero is-fullheight-with-navbar is-dark\">\n      <div className=\"hero-body background has-text-centered\">\n        <div className=\"container\">\n          <h1 className=\"title has-text-centered\">\n            Final Space <span>üöÄüç™</span>\n          </h1>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Home","import Axios from 'axios'\n\nconst baseUrl = 'https://finalspaceapi.com/api/v0'\n// const characterId = 'https://finalspaceapi.com/api/v0/character/1'\n\nexport function getAllCharacters () {\n  return Axios.get(`${baseUrl}/character`)\n}\n\nexport function getSingleCharacter (characterId) {\n  return Axios.get(`${baseUrl}/character/${characterId}`)\n}\n\n// Get Episodes\n\nexport function getAllEpisodes () {\n  return Axios.get(`${baseUrl}/episode`)\n}\n\n// Get Quotes\n\nexport function getAllQuotes () {\n  return Axios.get(`${baseUrl}/quote`)\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction CharacterCard({ characterId, name, image, origin }) {\n  return (\n    <div className=\"column is-one-quarter-desktop is-one-third-tablet\">\n      <Link to={`/character/${characterId}`}>\n        <div className=\"charcter-card is-dark\">\n          <div className=\"card-header is-dark\">\n            <h3 className=\"card-header-title is-dark\">{name}</h3>\n          </div>\n        </div>\n        <div className=\"card-image\">\n          <figure className=\"image image-is-1by1\">\n            <img src={image} alt={name} />\n          </figure>\n        </div>\n        <div className=\"character-card\">\n          <h4 className=\"card-header-title\">{origin}</h4>\n        </div>\n        \n      </Link>\n    </div>\n  )\n}\n\nexport default CharacterCard","function Error() {\n  return (\n    <div className=\"container has-text-centered\">\n      <h2 className=\"title\">\n        Oh no, something went wrong <span>üëΩ</span>\n      </h2>\n    </div>\n  )\n}\n\nexport default Error","function Loading() {\n  return <p>...loading<span>üöÄüç™</span></p>\n}\n\nexport default Loading","import React from 'react'\nimport { getAllCharacters } from '../../lib/api'\nimport CharacterCard from './CharacterCard'\nimport Error from '../common/Error'\nimport Loading from '../common/Loading'\n\n\nfunction CharacterIndex () {\n  \n  const [characters, setCharacters] = React.useState(null)\n  const [searchValue, setSearchValue] = React.useState('')\n  const [isError, setIsError] = React.useState(false)\n  const isLoading = !characters && !isError\n\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await getAllCharacters()   \n        setCharacters(response.data)      \n      } catch (err) {\n        setIsError(true)\n      }\n      \n    }\n    getData()\n  }, [])\n  \n  \n  const handleSearch = (e) => {\n    setSearchValue(e.target.value)\n  }\n  const filteredCharacters = (characters) => {\n    return characters.filter(character => {\n      return character.name.toLowerCase().includes(searchValue.toLowerCase())\n    })\n  }\n  return (   \n    <section className=\"section\">\n      <div className=\"columns\">\n        <div className=\"column is-one-third\">       \n          <input className=\"field input is-normal\" placeholder=\"Search...\" onChange={handleSearch} />           \n        </div>\n      </div>\n      <div className=\"container\">           \n        <div className =\"columns is-multiline\">\n          {isError && <Error />}\n          {isLoading && <Loading />}\n          {characters &&\n            filteredCharacters(characters).map(character => (\n              <CharacterCard \n                key={character.id}\n                name={character.name}\n                gender={character.gender}\n                image={character.img_url}\n                origin={character.origin}\n                characterId={character.id}\n                alias={character.alias}\n                abilities={character.abilities}\n                status={character.status}\n                \n            \n              />\n            ))}\n        </div>\n      </div>\n    </section>\n  \n  )\n}\n\nexport default CharacterIndex","import React from 'react'\nimport { useParams } from 'react-router'\nimport { getAllQuotes, getSingleCharacter } from '../../lib/api'\nimport { createNotification } from '../../lib/notification'\n// import Error from '../common/Error'\nimport Loading from '../common/Loading'\n\nfunction CharacterShow() {\n  const { characterId } = useParams()\n  const [character, setCharacter] = React.useState(null)\n  const [isError, setIsError] = React.useState(false)\n  const isLoading = !character && !isError\n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const characterResponse = await getSingleCharacter(characterId)\n        setCharacter(characterResponse.data)\n        const quoteResponse = await getAllQuotes()\n        const quotesArray = quoteResponse.data.filter(quote => {\n          if (quote.by === characterResponse.data.name) {\n            return quote\n          }\n\n        })\n        createNotification(quotesArray[Math.floor(Math.random() * quotesArray.length)].quote)\n      } catch (err) {\n        setIsError(true)\n      }\n    }\n    getData()\n  }, [characterId])\n\n\n\n  return (\n    <section className=\"section\">\n      <div className=\"columns\">\n        <div className=\"whole-card column is-half is-offset-one-quarter\">\n          <div className=\"container\">\n            {/* {isError && <Error />} */}\n            {isLoading && <Loading />}\n            {character &&\n              <div>\n                <div className=\"character-name\">\n                  <h2 className=\"title has-text-centered\"> {character.name} </h2>\n                  <hr />\n                </div>\n                <div className=\"columns\">\n                  <div className=\"column is-half\">\n                    <figure className=\"image\">\n                      <img src={character.img_url} alt={character.name} />\n                    </figure>\n                  </div>\n                  <div className=\"column is-half\">\n                    <h4 className=\"title is-4\">\n                      <span role=\"img\" aria-label=\"globe\">\n                        üåç\n\n                      </span> {' '}\n                      Origin\n                    </h4>\n                    <p>{character.origin}</p>\n                    <hr />\n                    <h4 className=\"title is-4\">\n                      <span role=\"img\" aria-label=\"alien\">\n                        üëΩ\n                      </span> {' '}\n                      Species\n                    </h4>\n                    <p>{character.species}</p>\n                  </div>\n                </div>\n                <hr />\n\n                <h4 className=\"title is-4\">\n                  <span role=\"img\" aria-label=\"lightning\">\n                    ‚ö°Ô∏è\n                  </span> {' '}\n                  Abilities\n                </h4>\n                <p>{character.abilities[Math.floor(Math.random() * character.abilities.length)]}</p>\n                <hr />\n                <h4 className=\"title is-4\">\n                  <span role=\"img\" aria-label=\"globe\">\n                    @\n                  </span> {' '}\n                  Alias\n                </h4>\n                <p>{character.alias[Math.floor(Math.random() * character.alias.length)]}</p>\n\n\n                <hr />\n              </div>\n\n            }\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default CharacterShow","\nimport { notify } from 'react-notify-toast'\n\nexport function createNotification (message) {\n  notify.show(message, 'custom', 3000, { background: '#fbcb46', color: '#000' })\n  \n}\n\n\n","\n\nexport const episodes = {\n  '1': 'https://www.netflix.com/watch/80174386?trackId=13752289&tctx=0%2C1%2Cf7095036fa255a1577391c16edbc6249ecf0a6ec%3Ad66d80365c0697a1c9e1fca7ed06340d33145c35%2Cf7095036fa255a1577391c16edbc6249ecf0a6ec%3Ad66d80365c0697a1c9e1fca7ed06340d33145c35%2Cunknown%2C%2C',\n  '2': 'https://www.netflix.com/watch/81001394?trackId=13752289',\n  '3': 'https://www.netflix.com/watch/81001395?trackId=200257858',\n  '4': 'https://www.netflix.com/watch/81001396?trackId=200257858',\n  '5': 'https://www.netflix.com/watch/81001397?trackId=200257858',\n  '6': 'https://www.netflix.com/watch/81001398?trackId=200257858',\n  '7': 'https://www.netflix.com/watch/81001399?trackId=200257858',\n  '8': 'https://www.netflix.com/watch/81001400?trackId=200257858',\n  '9': 'https://www.netflix.com/watch/81001401?trackId=200257858',\n  '10': 'https://www.netflix.com/watch/81001402?trackId=200257858',\n  '11': 'https://www.netflix.com/watch/81106565?trackId=200257858',\n  '12': 'https://www.netflix.com/watch/81106566?trackId=200257858',\n  '13': 'https://www.netflix.com/watch/81106567?trackId=200257858',\n  '14': 'https://www.netflix.com/watch/81106568?trackId=200257858',\n  '15': 'https://www.netflix.com/watch/81106569?trackId=200257858',\n  '16': 'https://www.netflix.com/watch/81106570?trackId=200257858',\n  '17': 'https://www.netflix.com/watch/81106571?trackId=200257858',\n  '18': 'https://www.netflix.com/watch/81106572?trackId=200257858',\n  '19': 'https://www.netflix.com/watch/81106573?trackId=200257858',\n  '20': 'https://www.netflix.com/watch/81106574?trackId=200257858',\n\n}\n","import React from 'react'\nimport { episodes } from '../../lib/episodes.js'\n\nfunction EpisodeCard({ episodeId, name, image, director, writer }) {\n  \n\n\n  return (\n    <div className=\"column is one-quarter-desktop is one-third-tablet\">\n      <div className=\"card\">\n        <div className=\"card-header\">\n          <h3 className=\"card-header-title\">{name}</h3>\n        </div>\n      </div>\n      <div className=\"card-image\">\n        <figure className=\"image image-is-1by1\">\n          <a href={episodes[episodeId]} target=\"_blank\" rel=\"noreferrer\"> <img src={image} alt={name} /> </a>\n        </figure>\n      </div>\n      <div className=\"character-card\">\n        <h5 className=\"episode-writer\"><strong className=\"episode-writer\">Writer:</strong> {writer}</h5>\n        <h5 className=\"episode-director\"><strong className=\"episode-director\">Director:</strong> {director}</h5>\n      </div>\n    </div>\n  )\n}\n\nexport default EpisodeCard","import React from 'react'\nimport { getAllEpisodes } from '../../lib/api'\nimport EpisodeCard from './EpisodeCard'\nimport Error from '../common/Error'\nimport Loading from '../common/Loading'\n\nfunction EpisodeIndex () {\n  const [episodes, setEpisodes] = React.useState(null)\n  const [selectedSeason, setSelectedSeason] = React.useState('all')\n  const [isError, setIsError] = React.useState(false)\n  const isLoading = !episodes && !isError\n  \n  React.useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await getAllEpisodes()\n        setEpisodes(response.data)\n      } catch (err) {\n        setIsError(true)\n      }\n    }\n    getData()\n  }, [])\n  \n  const handleSelect = (e) => {\n    setSelectedSeason(e.target.value)\n  }\n\n  const filteredEpisodes = (episodes) => {\n    return episodes.filter(episode => {\n      return episode.air_date.includes(selectedSeason) || selectedSeason === 'all'\n    })\n  }\n\n  \n  return (\n    <section className=\"section\">\n      <h1 className=\"watch-episode title is-1 has-text-centered\">Watch an episode!</h1>\n      <div className=\"container\">\n        <div className=\"field select is-medium\">\n          <select onChange={handleSelect}>\n            <option value=\"all\">All Seasons</option>\n            <option value=\"2018\">Season One</option>\n            <option value=\"2019\">Season Two</option>\n          </select>\n        </div>\n        <div className =\"column is-multiline\">\n          {isError && <Error />}\n          {isLoading && <Loading />}\n          {episodes && \n            filteredEpisodes(episodes).map(episode => (\n              <EpisodeCard \n                key={episode.id}\n                name={episode.name}\n                image={episode.img_url}\n                writer={episode.writer}\n                director={episode.director}\n                date={episode.air_date}  \n                episodeId={episode.id}                                    \n              />\n            ))}\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default EpisodeIndex","import { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Nav from './components/common/Nav'\nimport Home from './components/common/Home'\nimport CharacterIndex from './components/fscharacters/CharacterIndex'\nimport CharacterShow from './components/fscharacters/CharacterShow'\nimport EpisodeIndex from './components/fsepisodes/EpisodeIndex'\nimport Notification from 'react-notify-toast'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Notification />\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path =\"/character/:characterId\">\n          <CharacterShow />\n        </Route>\n        <Route path=\"/character\">\n          <CharacterIndex />\n        </Route>\n        <Route path=\"/episode\">\n          <EpisodeIndex />\n        </Route>       \n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}